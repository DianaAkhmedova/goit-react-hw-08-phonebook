{"version":3,"file":"static/js/523.afaa28c5.chunk.js","mappings":"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","sources":["redux/filter/filter-selectors.js","components/Filter/fields.js","components/Filter/Filter.jsx","components/ContactList/ContactListItem/ContactListItem.styled.js","components/ContactList/ContactListItem/ContactListItem.jsx","redux/contacts/contacts-selectors.js","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.styled.js","pages/ContactsPage/ContactsPage.jsx","../node_modules/@reach/visually-hidden/dist/reach-visually-hidden.mjs","components/ContactForm/initialState.js","components/ContactForm/fields.js","components/ContactForm/ContactForm.jsx","pages/HomePage/HomePage.jsx","pages/HomePage/HomePage.styled.js","shared/components/Form/Form.styled.js","shared/components/Form/Form.jsx","shared/components/TextField/TextField.styled.js","shared/components/TextField/TextField.jsx","shared/hooks/useForm.js"],"sourcesContent":["export const getFilter = ({ filter }) => filter;\n","const fields = {\n  contactName: {\n    type: 'text',\n    name: 'contactName',\n\n    label: 'Find contacts by name',\n    placeholder: 'Enter name',\n  },\n};\n\nexport default fields;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport Form from 'shared/components/Form/Form';\nimport TextField from 'shared/components/TextField/TextField';\n\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { setFilter } from 'redux/filter/filter-slice';\n\nimport fields from './fields';\n\nconst Filter = () => {\n  const filterValue = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = ({ currentTarget: { value } }) =>\n    dispatch(setFilter(value));\n\n  return (\n    <Form>\n      <TextField\n        value={filterValue}\n        handleChange={handleChangeFilter}\n        {...fields.contactName}\n      />\n    </Form>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  padding: 10px 10px 10px 40px;\n  width: 400px;\n  justify-content: space-between;\n  border: none;\n  border-radius: 4px;\n  background-color: #222;\n  box-shadow: rgba(0, 255, 255, 0.5) 0px 1px 2px,\n    rgba(0, 255, 255, 0.5) 0px 2px 4px, rgba(0, 255, 255, 0.5) 0px 4px 8px,\n    rgba(0, 255, 255, 0.5) 0px 8px 16px 10px;\n\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const ContactInfo = styled.p`\n  font-weight: 500;\n`;\n\nexport const RemoveBtn = styled.button`\n  min-width: 75px;\n  padding: 5px 12px;\n  border: 1px solid red;\n  border-radius: 4px;\n  background-color: white;\n  font-family: inherit;\n  font-size: 16px;\n  cursor: pointer;\n  font-family: inherit;\n  color: red;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: red;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport LetteredAvatar from 'react-lettered-avatar';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchDeleteContact } from 'redux/contacts/contacts-operations';\n\nimport Button from 'shared/components/Button/Button';\n\nimport { ContactItem, ContactInfo } from './ContactListItem.styled';\n\nconst ContactListItem = ({ id, name, number, type }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ContactItem>\n      <LetteredAvatar\n        name={name}\n        size={40}\n        radius={50}\n        color=\"#fff\"\n        backgroundColor=\"#00a2a9\"\n      />\n      <ContactInfo>\n        {name}: {number}\n      </ContactInfo>\n      <Button onClick={() => dispatch(fetchDeleteContact(id))} type={type}>\n        Delete\n      </Button>\n    </ContactItem>\n  );\n};\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n","export const getAllContacts = ({ contacts }) => contacts.items;\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  return contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n","import { useSelector } from 'react-redux';\n\nimport ContactListItem from './ContactListItem/ContactListItem';\n\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n\n  const sortedContacts = [...contacts].sort((firstName, secondName) =>\n    firstName.name.localeCompare(secondName.name)\n  );\n\n  const contactsItem = sortedContacts.map(({ id, name, number }) => (\n    <ContactListItem\n      key={id}\n      id={id}\n      name={name}\n      number={number}\n      type=\"button\"\n    />\n  ));\n  return <ul>{contactsItem}</ul>;\n};\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const ContactsTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 40px;\n  color: #fff;\n  text-shadow: rgb(255, 255, 255) 0px 0px 0px, rgb(255, 255, 255) 0px 0px 0px,\n    rgb(255, 255, 255) 0px 0px 0px, rgb(0, 206, 210) 0px 0px 10px,\n    rgb(0, 189, 195) 0px 0px 3px, rgb(0, 206, 210) 0px 0px 9px,\n    rgb(0, 171, 178) 0px 0px 1px, rgb(0, 189, 195) 0px 0px 0px;\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Filter from 'components/Filter/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport { fetchContacts } from 'redux/contacts/contacts-operations';\n\nimport { PhonebookContainer } from 'pages/HomePage/HomePage.styled';\nimport { ContactsTitle } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(getFilteredContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <PhonebookContainer>\n        <ContactsTitle>My contacts</ContactsTitle>\n        <Filter />\n        {filteredContacts.length > 0 ? (\n          <ContactList />\n        ) : (\n          <p>The contact list is empty...</p>\n        )}\n      </PhonebookContainer>\n    </>\n  );\n};\n\nexport default ContactsPage;\n","\"use strict\";\n/**\n  * @reach/visually-hidden v0.18.0\n  *\n  * Copyright (c) 2018-2022, React Training LLC\n  *\n  * This source code is licensed under the MIT license found in the\n  * LICENSE.md file in the root directory of this source tree.\n  *\n  * @license MIT\n  */\n\n\n// src/reach-visually-hidden.tsx\nimport * as React from \"react\";\nvar VisuallyHidden = React.forwardRef(function VisuallyHidden2({ as: Comp = \"span\", style = {}, ...props }, ref) {\n  return /* @__PURE__ */ React.createElement(Comp, {\n    ref,\n    style: {\n      border: 0,\n      clip: \"rect(0 0 0 0)\",\n      height: \"1px\",\n      margin: \"-1px\",\n      overflow: \"hidden\",\n      padding: 0,\n      position: \"absolute\",\n      width: \"1px\",\n      whiteSpace: \"nowrap\",\n      wordWrap: \"normal\",\n      ...style\n    },\n    ...props\n  });\n});\nVisuallyHidden.displayName = \"VisuallyHidden\";\nexport {\n  VisuallyHidden\n};\n","const initialState = {\n  name: '',\n  number: '',\n};\n\nexport default initialState;\n","const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    required: true,\n    label: 'Name',\n    placeholder: 'Michael Jackson',\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n  },\n  number: {\n    type: 'tel',\n    name: 'number',\n    required: true,\n    label: 'Number',\n    placeholder: '111-11-11',\n    // pattern: '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n    title:\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n  },\n};\n\nexport default fields;\n","import PropTypes from 'prop-types';\n\nimport useForm from 'shared/hooks/useForm';\n\nimport Form from 'shared/components/Form/Form';\nimport TextField from 'shared/components/TextField/TextField';\nimport Button from 'shared/components/Button/Button';\n\nimport initialState from './initialState';\nimport fields from './fields';\n\nconst ContactForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n  const { name, number } = state;\n\n  return (\n    <Form onSubmit={handleSubmit} name=\"contactForm\" autoComplete=\"on\">\n      <TextField value={name} handleChange={handleChange} {...fields.name} />\n      <TextField\n        value={number}\n        handleChange={handleChange}\n        {...fields.number}\n      />\n\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\nexport default ContactForm;\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { VisuallyHidden } from '@reach/visually-hidden';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactsPage from 'pages/ContactsPage/ContactsPage';\n\nimport { isUserLogin } from 'redux/auth/auth-selectors';\nimport { fetchAddContact } from 'redux/contacts/contacts-operations';\n\nimport {\n  PhonebookContainer,\n  PhonebookTitle,\n  TextWrapper,\n} from './HomePage.styled';\nimport { Link } from 'components/Auth/Auth.styled';\n\nconst HomePage = () => {\n  const isLogin = useSelector(isUserLogin);\n  const dispatch = useDispatch();\n\n  const handleAddContact = contact => {\n    dispatch(fetchAddContact(contact));\n  };\n\n  return (\n    <>\n      {!isLogin ? (\n        <TextWrapper>\n          If you want to use the Phonebook,{' '}\n          <Link to={'/register'} style={{ margin: 0 }}>\n            register\n          </Link>{' '}\n          or <Link to={'/login'}>login</Link>\n        </TextWrapper>\n      ) : (\n        <PhonebookContainer>\n          <PhonebookTitle>Welcome to the Phonebook!</PhonebookTitle>\n          <ContactForm onSubmit={handleAddContact} />\n          <VisuallyHidden>\n            <ContactsPage />\n          </VisuallyHidden>\n        </PhonebookContainer>\n      )}\n    </>\n  );\n};\n\nexport default HomePage;\n","import styled from 'styled-components';\n\nexport const PhonebookContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\nexport const PhonebookTitle = styled.h1`\n  text-align: center;\n  animation: glow 1s ease-in-out infinite alternate;\n  margin-bottom: 40px;\n  color: #fff;\n  text-shadow: rgb(255, 255, 255) 0px 0px 0px, rgb(255, 255, 255) 0px 0px 0px,\n    rgb(255, 255, 255) 0px 0px 0px, rgb(0, 206, 210) 0px 0px 10px,\n    rgb(0, 189, 195) 0px 0px 3px, rgb(0, 206, 210) 0px 0px 9px,\n    rgb(0, 171, 178) 0px 0px 1px, rgb(0, 189, 195) 0px 0px 0px;\n\n  @keyframes glow {\n    from {\n      text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px rgb(0, 189, 195),\n        0 0 20px rgb(0, 189, 195), 0 0 25px rgb(0, 189, 195),\n        0 0 30px rgb(0, 189, 195), 0 0 35px rgb(0, 189, 195);\n    }\n    to {\n      text-shadow: 0 0 10px #fff, 0 0 20px #fff, 0 0 30px rgb(0, 189, 195),\n        0 0 40px rgb(0, 189, 195), 0 0 50px rgb(0, 189, 195),\n        0 0 60px rgb(0, 189, 195), 0 0 70px rgb(0, 189, 195);\n    }\n  }\n`;\n\nexport const TextWrapper = styled.div`\n  margin: 0 auto;\n  font-size: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  width: 400px;\n  padding: 20px;\n  margin-bottom: 30px;\n  border: none;\n  border-radius: 5px;\n  background-color: #222;\n  box-shadow: 0px 1px 2px rgba(0, 255, 255, 0.5),\n    0px 2px 4px rgba(0, 255, 255, 0.5), 0px 4px 8px rgba(0, 255, 255, 0.5),\n    0px 8px 16px rgba(0, 255, 255, 0.5);\n`;\n","import PropTypes from 'prop-types';\nimport { StyledForm } from './Form.styled';\n\nconst Form = ({ onSubmit, children }) => {\n  return <StyledForm onSubmit={onSubmit}>{children}</StyledForm>;\n};\n\nexport default Form;\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const FormLabel = styled.label`\n  display: inherit;\n  flex-direction: inherit;\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 16px;\n`;\n\nexport const FormInput = styled.input`\n  display: block;\n  margin-top: 4px;\n  margin-bottom: 20px;\n  padding: 4px 8px;\n  width: 270px;\n\n  border: none;\n  outline: none;\n  color: #fff;\n  background: #0f0f0f;\n  font-size: 15px;\n  box-shadow: 0px 1px 2px rgba(0, 255, 255, 0.5),\n    0px 2px 4px rgba(0, 255, 255, 0.5), 0px 4px 8px rgba(0, 255, 255, 0.5),\n    0px 8px 16px rgba(0, 255, 255, 0.5);\n  border-radius: 5px;\n\n  &::placeholder {\n    font-size: 14px;\n    line-height: 1.14;\n    letter-spacing: 0.01em;\n    color: rgba(117, 117, 117, 0.5);\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { FormLabel, FormInput } from './TextField.styled';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  return (\n    <div>\n      <FormLabel>\n        {label} <FormInput onChange={handleChange} {...props} />\n      </FormLabel>\n    </div>\n  );\n};\n\nexport default TextField;\n\nTextField.propTypes = {\n  label: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ currentTarget }) => {\n    const { name, value } = currentTarget;\n\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["getFilter","filter","contactName","type","name","label","placeholder","filterValue","useSelector","dispatch","useDispatch","Form","TextField","value","handleChange","currentTarget","setFilter","fields","ContactItem","styled","ContactInfo","id","number","size","radius","color","backgroundColor","Button","onClick","fetchDeleteContact","getFilteredContacts","contacts","items","contact","toLowerCase","includes","contactsItem","sort","firstName","secondName","localeCompare","map","ContactsTitle","filteredContacts","useEffect","fetchContacts","length","VisuallyHidden","React","ref","as","Comp","style","props","border","clip","height","margin","overflow","padding","position","width","whiteSpace","wordWrap","displayName","required","pattern","title","onSubmit","useForm","initialState","state","handleSubmit","autoComplete","isLogin","isUserLogin","fetchAddContact","ContactsPage","to","PhonebookContainer","PhonebookTitle","TextWrapper","StyledForm","children","FormLabel","FormInput","onChange","useState","setState","prevState","event","preventDefault"],"sourceRoot":""}