{"version":3,"file":"static/js/314.16b334fd.chunk.js","mappings":"kPAEaA,EAAqBC,EAAAA,GAAAA,IAAH,+GAOlBC,EAAiBD,EAAAA,GAAAA,GAAH,gDAIdE,EAAgBF,EAAAA,GAAAA,GAAH,+C,6JCXbG,EAAOH,EAAAA,GAAAA,KAAH,wOAYJI,EAAYJ,EAAAA,GAAAA,MAAH,0IAQTK,EAAYL,EAAAA,GAAAA,MAAH,uSAiBTM,EAASN,EAAAA,GAAAA,OAAH,+e,sFCvCNO,EAAY,SAAC,GAAD,SAAGC,MAAH,E,2BCiCzB,EAtBe,WACb,IAAMC,GAAcC,EAAAA,EAAAA,IAAYH,GAC1BI,GAAWC,EAAAA,EAAAA,MAKjB,OACE,SAAC,KAAD,WACE,UAAC,KAAD,oCAEE,SAAC,KAAD,CACEC,KAAK,OACLC,KAAK,cACLC,MAAON,EACPO,YAAY,aACZC,SAZmB,SAAC,GAAD,IAAoBF,EAApB,EAAGG,cAAiBH,MAApB,OACzBJ,GAASQ,EAAAA,EAAAA,GAAUJ,GADM,QAiB5B,EC/BYK,EAAsB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUb,EAAa,EAAbA,OAC9C,OAAKA,EAIEa,EAASC,MAAMd,QAAO,SAAAe,GAAO,OAClCA,EAAQT,KAAKU,cAAcC,SAASjB,EAAOgB,cADT,IAH3BH,EAASC,KAMnB,E,2BCPYI,EAAc1B,EAAAA,GAAAA,GAAH,gSAeX2B,EAAc3B,EAAAA,GAAAA,EAAH,6CAIX4B,EAAY5B,EAAAA,GAAAA,OAAH,0eCCtB,EAfwB,SAAC,GAAgC,IAA9B6B,EAA6B,EAA7BA,GAAIf,EAAyB,EAAzBA,KAAMgB,EAAmB,EAAnBA,OAAQjB,EAAW,EAAXA,KACrCF,GAAWC,EAAAA,EAAAA,MAEjB,OACE,UAACc,EAAD,YACE,UAACC,EAAD,WACGb,EADH,KACWgB,MAEX,SAACF,EAAD,CAAWG,QAAS,kBAAMpB,GAASqB,EAAAA,EAAAA,IAAmBH,GAAlC,EAAwChB,KAAMA,EAAlE,sBAKL,ECDD,EAdoB,WAClB,IAEMoB,GAFWvB,EAAAA,EAAAA,IAAYU,GAECc,KAAI,gBAAGL,EAAH,EAAGA,GAAIf,EAAP,EAAOA,KAAMqB,EAAb,EAAaA,MAAb,OAChC,SAAC,EAAD,CAEEN,GAAIA,EACJf,KAAMA,EACNgB,OAAQK,EACRtB,KAAK,UAJAgB,EAFyB,IASlC,OAAO,wBAAKI,GACb,E,QCKD,EAdqB,WACnB,IAAMG,GAAmB1B,EAAAA,EAAAA,IAAYU,GAErC,OACE,+BACE,UAAC,KAAD,YACE,SAAC,KAAD,wBACA,SAAC,EAAD,IACCgB,EAAiBC,OAAS,IAAK,SAAC,EAAD,QAIvC,C","sources":["App.styled.js","modules/ContactForm/ContactForm.styled.js","redux/filter/filter-selectors.js","modules/Filter/Filter.jsx","redux/contacts/contacts-selectors.js","modules/ContactList/ContactListItem/ContactListItem.styled.js","modules/ContactList/ContactListItem/ContactListItem.jsx","modules/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PhonebookContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 40px;\n`;\n\nexport const PhonebookTitle = styled.h1`\n  margin-bottom: 20px;\n`;\n\nexport const ContactsTitle = styled.h2`\n  margin-bottom: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 400px;\n  padding: 20px;\n  margin-bottom: 20px;\n  border: 1px solid #000;\n  border-radius: 5px;\n  background-color: #ccd4d8;\n`;\n\nexport const FormLabel = styled.label`\n  display: inherit;\n  flex-direction: inherit;\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 16px;\n`;\n\nexport const FormInput = styled.input`\n  display: block;\n  margin-top: 4px;\n  padding: 4px 8px;\n  border: 1px solid black;\n\n  max-width: 400px;\n  font-size: 18px;\n\n  &::placeholder {\n    font-size: 14px;\n    line-height: 1.14;\n    letter-spacing: 0.01em;\n    color: rgba(117, 117, 117, 0.5);\n  }\n`;\n\nexport const AddBtn = styled.button`\n  min-width: 75px;\n  padding: 5px 12px;\n  border: 1px solid green;\n  border-radius: 4px;\n  background-color: white;\n  font-family: inherit;\n  font-size: 16px;\n  cursor: pointer;\n  font-family: inherit;\n  color: green;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: green;\n  }\n`;\n","export const getFilter = ({ filter }) => filter;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilter } from 'redux/filter/filter-selectors';\nimport { setFilter } from 'redux/filter/filter-slice';\n\nimport {\n  Form,\n  FormLabel,\n  FormInput,\n} from 'modules/ContactForm/ContactForm.styled';\n\nconst Filter = () => {\n  const filterValue = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = ({ currentTarget: { value } }) =>\n    dispatch(setFilter(value));\n\n  return (\n    <Form>\n      <FormLabel>\n        Find contacts by name\n        <FormInput\n          type=\"text\"\n          name=\"contactName\"\n          value={filterValue}\n          placeholder=\"Enter name\"\n          onChange={handleChangeFilter}\n        />\n      </FormLabel>\n    </Form>\n  );\n};\nexport default Filter;\n","export const getAllContacts = ({ contacts }) => contacts.items;\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  return contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  padding: 10px 10px 10px 40px;\n  width: 400px;\n  justify-content: space-between;\n  border: 1px solid black;\n  border-radius: 4px;\n  background-color: #aab7be;\n\n  &:not(:last-child) {\n    margin-bottom: 4px;\n  }\n`;\n\nexport const ContactInfo = styled.p`\n  font-weight: 500;\n`;\n\nexport const RemoveBtn = styled.button`\n  min-width: 75px;\n  padding: 5px 12px;\n  border: 1px solid red;\n  border-radius: 4px;\n  background-color: white;\n  font-family: inherit;\n  font-size: 16px;\n  cursor: pointer;\n  font-family: inherit;\n  color: red;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: red;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\n\nimport { fetchDeleteContact } from 'redux/contacts/contacts-operations';\n\nimport { ContactItem, ContactInfo, RemoveBtn } from './ContactListItem.styled';\n\nconst ContactListItem = ({ id, name, number, type }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <ContactItem>\n      <ContactInfo>\n        {name}: {number}\n      </ContactInfo>\n      <RemoveBtn onClick={() => dispatch(fetchDeleteContact(id))} type={type}>\n        Delete\n      </RemoveBtn>\n    </ContactItem>\n  );\n};\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\n\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport ContactListItem from './ContactListItem/ContactListItem';\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n\n  const contactsItem = contacts.map(({ id, name, phone }) => (\n    <ContactListItem\n      key={id}\n      id={id}\n      name={name}\n      number={phone}\n      type=\"button\"\n    />\n  ));\n  return <ul>{contactsItem}</ul>;\n};\nexport default ContactList;\n","import { useSelector } from 'react-redux';\n\nimport Filter from 'modules/Filter/Filter';\nimport ContactList from 'modules/ContactList/ContactList';\n\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\n\nimport { PhonebookContainer, ContactsTitle } from '../../App.styled';\n\nconst ContactsPage = () => {\n  const filteredContacts = useSelector(getFilteredContacts);\n\n  return (\n    <>\n      <PhonebookContainer>\n        <ContactsTitle>Contacts</ContactsTitle>\n        <Filter />\n        {filteredContacts.length > 0 && <ContactList />}\n      </PhonebookContainer>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["PhonebookContainer","styled","PhonebookTitle","ContactsTitle","Form","FormLabel","FormInput","AddBtn","getFilter","filter","filterValue","useSelector","dispatch","useDispatch","type","name","value","placeholder","onChange","currentTarget","setFilter","getFilteredContacts","contacts","items","contact","toLowerCase","includes","ContactItem","ContactInfo","RemoveBtn","id","number","onClick","fetchDeleteContact","contactsItem","map","phone","filteredContacts","length"],"sourceRoot":""}